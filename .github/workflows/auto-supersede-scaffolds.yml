name: Auto-supersede scaffold PRs

on:
  pull_request_target:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  supersede:
    runs-on: ubuntu-latest
    steps:
      - name: Mark older scaffold PRs as superseded when Copilot PR exists
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner; const repo = context.repo.repo;
            // Helper to extract RFC id from a string
            const extractRfc = s => {
              const m = s?.match(/RFC[- ](\d{4})/i); return m ? m[1] : null;
            };
            // List open PRs
            const prs = await github.paginate(github.rest.pulls.list, { owner, repo, state: 'open', per_page: 100 });
            // Group PRs by RFC id
            const groups = new Map();
            for (const pr of prs) {
              const rid = extractRfc(pr.title) || extractRfc(pr.body || '');
              if (!rid) continue;
              const arr = groups.get(rid) || []; arr.push(pr); groups.set(rid, arr);
            }
            for (const [rid, arr] of groups.entries()) {
              if (arr.length < 2) continue; // nothing to supersede
              // Prefer Copilot-created PRs (author is app or user 'copilot-swe-agent')
              const isCopilot = pr => (pr.user?.type === 'Bot' && /copilot/i.test(pr.user?.login || '')) || /copilot/i.test(pr.head?.ref || '');
              const copilotPrs = arr.filter(isCopilot);
              if (copilotPrs.length === 0) continue;
              const keep = copilotPrs[0];
              for (const pr of arr) {
                if (pr.number === keep.number) continue;
                // Label as superseded
                await github.rest.issues.addLabels({ owner, repo, issue_number: pr.number, labels: ['superseded'] }).catch(()=>{});
                // Convert to draft
                await github.rest.pulls.update({ owner, repo, pull_number: pr.number, draft: true }).catch(()=>{});
                // Comment
                const note = `This PR appears superseded by Copilot PR #${keep.number} for RFC-${rid}. Keeping this as draft to reduce noise.`;
                await github.rest.issues.createComment({ owner, repo, issue_number: pr.number, body: note }).catch(()=>{});
              }
            }